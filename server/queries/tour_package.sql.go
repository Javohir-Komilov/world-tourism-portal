// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: tour_package.sql

package queries

import (
	"context"
	"database/sql"
	"time"
)

const createTourPackage = `-- name: CreateTourPackage :one
INSERT INTO tour_packages (agent_id, name, description, price, start_date, end_date)
VALUES (?1, ?2, ?3, ?4, ?5, ?6)
RETURNING id
`

type CreateTourPackageParams struct {
	AgentID     int64
	Name        string
	Description sql.NullString
	Price       float64
	StartDate   time.Time
	EndDate     time.Time
}

func (q *Queries) CreateTourPackage(ctx context.Context, arg CreateTourPackageParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, createTourPackage,
		arg.AgentID,
		arg.Name,
		arg.Description,
		arg.Price,
		arg.StartDate,
		arg.EndDate,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const updateTourPackage = `-- name: UpdateTourPackage :one
UPDATE tour_packages
SET name = ?1,
    description = ?2,
    price = ?3,
    start_date = ?4,
    end_date = ?5
WHERE id = ?6
RETURNING id
`

type UpdateTourPackageParams struct {
	Name        string
	Description sql.NullString
	Price       float64
	StartDate   time.Time
	EndDate     time.Time
	ID          int64
}

func (q *Queries) UpdateTourPackage(ctx context.Context, arg UpdateTourPackageParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, updateTourPackage,
		arg.Name,
		arg.Description,
		arg.Price,
		arg.StartDate,
		arg.EndDate,
		arg.ID,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}
