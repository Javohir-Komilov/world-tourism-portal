// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (username, password_hash, role)
VALUES (?1, ?2, ?3)
RETURNING id
`

type CreateUserParams struct {
	Username     string
	PasswordHash string
	Role         string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Username, arg.PasswordHash, arg.Role)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const updateUser = `-- name: UpdateUser :one
UPDATE users
SET username = ?1,
    password_hash = ?2,
    role = ?3
WHERE id = ?4
RETURNING id
`

type UpdateUserParams struct {
	Username     string
	PasswordHash string
	Role         string
	ID           int64
}

func (q *Queries) UpdateUser(ctx context.Context, arg UpdateUserParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, updateUser,
		arg.Username,
		arg.PasswordHash,
		arg.Role,
		arg.ID,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}
